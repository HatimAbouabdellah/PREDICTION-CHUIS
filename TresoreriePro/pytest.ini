[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Options de rapport
addopts = -v --cov=./ --cov-report=term-missing --cov-report=html

# Configuration de la couverture de code
[tool.coverage.run]
source = .
omit =
    */tests/*
    */__pycache__/*
    */venv/*
    */.tox/*
    */build/*
    */dist/*
    */.eggs/*

[tool.coverage.report]
exclude_lines =
    # A more reasonable default, matching the standard library's test suite
    pragma: no cover
    def __repr__
    raise NotImplementedError
    raise ImportError
    if __name__ == .__main__.:
    pass
    raise AssertionError
    raise NotImplemented
    from importlib import import_module
    # Let's not complain if tests don't hit defensive assertion code:
    ^\s*raise AssertionError\b
    ^\s*raise NotImplemented\b
    ^\s*return NotImplemented\b
    ^\s*raise$\n^\s*\S*\s*=\s*NotImplemented\b
    ^\s*raise\s+NotImplementedError\b
    ^\s*#\s*pragma:\s+no\s*cover\b
    ^\s*"""(\s*[^\n]*)?\b(not\s+)?(test|check|verify|ensure|should|must|require)\b.*$
    ^\s*"""(\s*[^\n]*)?\b(not\s+)?(test|check|verify|ensure|should|must|require)\b.*"""
    ^\s*#\s*(TODO|FIXME|XXX|HACK|BUG|OPTIMIZE|NOTE|WARNING|ERROR|CRITICAL)\b.*$
